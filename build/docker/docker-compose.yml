version: "3.7"

services:
  fuzzysearch:
    image: $DOCKER_REGISTRY/api:$VERSION
    container_name: fuzzysearch
    environment:
      SPRING_PROFILES_ACTIVE: $SPRING_PROFILES_ACTIVE
      CERTIFICATE_DOMAIN: $CERTIFICATE_DOMAIN
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      API_SERVICE_SEARCH_ENDPOINT: $API_SERVICE_SEARCH_ENDPOINT
      SERVER_PORT: $SERVER_PORT
      VERSION: $VERSION
      ELASTICSEARCH_URL: $ELASTICSEARCH_URL
      MIN_SEARCH_TERM_LENGTH: $MIN_SEARCH_TERM_LENGTH
      MAX_SEARCH_CRITERIA: $MAX_SEARCH_CRITERIA
      MAX_NUM_SERVICES_TO_RETURN: $MAX_NUM_SERVICES_TO_RETURN
      MAX_NUM_SERVICES_TO_RETURN_FROM_ELASTICSEARCH: $MAX_NUM_SERVICES_TO_RETURN_FROM_ELASTICSEARCH
      MAX_NUM_SERVICES_TO_RETURN_FROM_ELASTICSEARCH_3_SEARCH_TERMS: $MAX_NUM_SERVICES_TO_RETURN_FROM_ELASTICSEARCH_3_SEARCH_TERMS
      FUZZ_LEVEL: $FUZZ_LEVEL
      NAME_PRIORITY: $NAME_PRIORITY
      ADDRESS_PRIORITY: $ADDRESS_PRIORITY
      POSTCODE_PRIORITY: $POSTCODE_PRIORITY
      PUBLIC_NAME_PRIORITY: $NAME_PUBLIC_PRIORITY
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      COGNITO_USER_POOL_CLIENT_ID: $COGNITO_USER_POOL_CLIENT_ID
      COGNITO_USER_POOL_CLIENT_SECRET: $COGNITO_USER_POOL_CLIENT_SECRET
      COGNITO_USER_POOL_ID: $COGNITO_USER_POOL_ID
      POSTCODE_MAPPING_SERVICE_URL: $POSTCODE_MAPPING_SERVICE_URL
      AUTH_LOGIN_URL: $AUTH_LOGIN_URL
      AUTH_LOGIN_URI: $AUTH_LOGIN_URI
      POSTCODE_MAPPING_USER: $POSTCODE_MAPPING_USER
      POSTCODE_MAPPING_PASSWORD: $POSTCODE_MAPPING_PASSWORD
      GOOGLE_API_URL: $GOOGLE_API_URL
      GOOGLE_API_ADDRESS_URI: $GOOGLE_API_ADDRESS_URI
      GOOGLE_MAPS_API_KEY: $GOOGLE_MAPS_API_KEY
      NHS_CHOICES_API_URL: $NHS_CHOICES_API_URL
      NHS_CHOICES_API_KEY: $NHS_CHOICES_API_KEY
    restart: on-failure
    ports:
      - 8443:8443
    depends_on:
      - opensearch
    command: ["java", "-jar", "/application/dos-service-fuzzy-search-api.jar"]
    networks:
      default:
        aliases:
          - fuzzysearch.sfs.local

  # elasticsearch:
  #   image: nhsd/elasticsearch:$DOCKER_LIBRARY_ELASTICSEARCH_VERSION
  #   container_name: elasticsearch
  #   hostname: elasticsearch
  #   ports:
  #     - "9200:9200"
  #   command: ["elasticsearch"]
  #   networks:
  #     default:
  #       aliases:
  #         - elasticsearch.sfs.local
  mockservice:
    image: ddc-nexus-mgmt-nexus-docker.mgmt.texasplatform.uk/wiremock/wiremock:2.32.0
    container_name: mockservice
    volumes:
      - $PROJECT_DIR/test/wiremock_mappings:/home/wiremock/mappings/
    ports:
      - "8090:8080"
    command: ["--verbose"]
    networks:
      default:
        aliases:
          - mockservice.sf.test
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.13.0
  #   container_name: kibana
  #   environment:
  #     SERVER_HOST: "0.0.0.0"
  #     SERVER_PORT: 5601
  #     SERVER_NAME: kibana
  #     ELASTICSEARCH_HOSTS: http://elasticsearch.sfs.local:9200
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     default:
  #       aliases:
  #         - kibana.sfs.local
  opensearch:
    image: opensearchproject/opensearch:1.3.0
    container_name: opensearch
    hostname: opensearch
    user: opensearch
    environment:
      discovery.type: single-node
      http.port: 9200
      node.name: opensearch
      DISABLE_SECURITY_PLUGIN: true
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9600:9600"
    labels:
      - "app=elastic-search"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl -s $ELASTICSEARCH_URL/_cluster/health | grep -q ''"status":"green"''',
        ]
      interval: 20s
      timeout: 10s
      retries: 5
    networks:
      default:
        aliases:
          - opensearch.sf.test
  opensearch-dashboard:
    platform: linux/x86_64
    image: opensearchproject/opensearch-dashboards:1.3.0
    container_name: opensearch-dashboard
    environment:
      SERVER_HOST: "0.0.0.0"
      SERVER_PORT: 5601
      SERVER_NAME: opensearch-dashboard
      OPENSEARCH_HOSTS: $ELASTICSEARCH_URL
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true

    ports:
      - "5601:5601"
    expose:
      - "5601"
    depends_on:
      - opensearch
    networks:
      default:
        aliases:
          - opensearch-dashboard.sf.test
  init:
    image: curlimages/curl:latest
    container_name: init
    depends_on:
      opensearch:
        condition: service_healthy
    volumes:
      - $PROJECT_DIR/data/services/:/services
    entrypoint:
      ["/services/wait-for-it.sh", $ELASTICSEARCH_URL, "/services/create_all_services_local.sh"]

    # db-dos:
    #   image: $AWS_ECR/uec-tools/dtdb/database:latest
    #   hostname: db-dos
    #   container_name: db-dos
    #   ports:
    #     - 5432:5432
    #   networks:
    #     default:
    #       aliases:
    #         - db-dos.sfs.local

networks:
  default:
    external:
      name: $DOCKER_NETWORK
